#!/bin/bash
# –ù–∞–∑–≤–∞–Ω–∏–µ: install_samba_full.sh
# –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Samba —Å –∞–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞: Debian 10+, Ubuntu 20.04+

set -euo pipefail
IFS=$'\n\t'

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Samba —Å –∞–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º ===${NC}"

if [ "$EUID" -ne 0 ]; then
    echo -e "${RED}‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root${NC}"
    exec sudo "$0" "$@"
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
SHARE_PATH="/srv/samba/public"
SAMBA_CONF="/etc/samba/smb.conf"
BACKUP_CONF="/etc/samba/smb.conf.bak"
MOUNT_BASE="/mnt/disk"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
apt update -qq
apt upgrade -yqq 2>/dev/null || true

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Samba
if ! command -v smbstatus &> /dev/null; then
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Samba...${NC}"
    apt install -y samba samba-common-bin
    echo -e "${GREEN}‚úÖ Samba —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ntfs-3g –¥–ª—è NTFS
if ! dpkg -l | grep -q ntfs-3g; then
    apt install -y ntfs-3g
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—â–µ–π –ø–∞–ø–∫–∏
mkdir -p "$SHARE_PATH"
chmod 1777 "$SHARE_PATH"
chown nobody:nogroup "$SHARE_PATH"

# –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
if [ -f "$SAMBA_CONF" ]; then
    cp "$SAMBA_CONF" "$BACKUP_CONF"
    echo -e "${BLUE}üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $BACKUP_CONF${NC}"
fi

# --- –ê–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤ ---
echo -e "${YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–æ–≤...${NC}"

# –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cat > /usr/local/bin/mount_samba_disks.sh << 'EOF'
#!/bin/bash
# –ê–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ—Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∏—Å–∫–æ–≤

MOUNT_BASE="/mnt/disk"
mkdir -p "$MOUNT_BASE"

for device in /dev/sd*[0-9] /dev/nvme* /dev/mmcblk*p[0-9]; do
    [ -b "$device" ] || continue

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏—Å–∫
    if mount | grep "$device" | grep -q " / "; then
        continue
    fi

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    if mount | grep -q "$device"; then
        continue
    fi

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –§–°
    fs_type=$(blkid -o value -s TYPE "$device" || echo "")

    if [[ "$fs_type" =~ ^(ntfs|vfat|ext4|xfs)$ ]]; then
        uuid=$(blkid -s UUID -o value "$device")
        dir="$MOUNT_BASE/$(basename "$device")"
        mkdir -p "$dir"

        case "$fs_type" in
            ntfs)
                mount -t ntfs-3g -o rw,uid=1000,gid=1000,umask=000 "$device" "$dir" ;;
            vfat|msdos)
                mount -t vfat -o rw,uid=1000,gid=1000,umask=000 "$device" "$dir" ;;
            *)
                mount -t "$fs_type" -o rw "$device" "$dir" ;;
        esac

        if [ $? -eq 0 ]; then
            echo "‚úÖ –°–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ: $device -> $dir"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $device"
        fi
    fi
done
EOF

chmod +x /usr/local/bin/mount_samba_disks.sh

# –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É
cat > /etc/systemd/system/mount-samba-disks.service << 'EOF'
[Unit]
Description=Mount Samba Disks
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/mount_samba_disks.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable --now mount-samba-disks.service
echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ.${NC}"

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥ Samba —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º ---
echo -e "${YELLOW}üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Samba —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º (SMB3) –∏ –æ–±—â–∏–º–∏ –ø–∞–ø–∫–∞–º–∏...${NC}"

cat > "$SAMBA_CONF" << EOF
[global]
   workgroup = WORKGROUP
   server string = Samba Server %h
   security = user
   map to guest = bad user
   server role = standalone server
   log file = /var/log/samba/%m.log
   log level = 1

   # üîê –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞ (SMB3)
   server smb encrypt = required

   # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ)
   # smb encrypt = desired

# –ì–æ—Å—Ç–µ–≤–∞—è –ø–∞–ø–∫–∞
[public]
   path = $SHARE_PATH
   browsable = yes
   writable = yes
   guest ok = yes
   read only = no
   create mask = 0666
   directory mask = 0777
EOF

# –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∏—Å–∫–æ–≤ —á–µ—Ä–µ–∑ Samba
echo -e "${YELLOW}üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–∫–æ–≤ –≤ Samba...${NC}"
for mount_point in /mnt/disk/*; do
    if [ -d "$mount_point" ] && [ "$(ls -A "$mount_point")" ]; then
        share_name="disk_$(basename "$mount_point")"
        echo -e "\n[$share_name]\n   path = $mount_point\n   browsable = yes\n   writable = yes\n   guest ok = yes\n   read only = no" >> "$SAMBA_CONF"
        echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: [$share_name] -> $mount_point"
    fi
done

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Cockpit (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å) ---
echo -e "${YELLOW}üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Cockpit (–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)...${NC}"
if ! command -v cockpit &> /dev/null; then
    apt install -y cockpit cockpit-samba
    systemctl enable --now cockpit.socket
    echo -e "${GREEN}‚úÖ Cockpit —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ https://$(hostname -I | awk '{print $1}'):9090${NC}"
else
    echo -e "${GREEN}‚úÖ Cockpit —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
fi

# --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–∞—Ä–æ–ª–µ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
echo
echo -e "${BLUE}üîê –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Samba? (yes/no)${NC}"
read -r -p "–í–≤–µ–¥–∏—Ç–µ 'yes': " ADD_USER

if [[ "$ADD_USER" =~ ^[Yy][Ee][Ss]$ ]]; then
    read -rp "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " SMB_USER
    if ! id "$SMB_USER" &>/dev/null; then
        adduser --disabled-password --gecos "" "$SMB_USER"
    fi

    echo -e "${YELLOW}üîë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–æ–ª—è Samba –¥–ª—è $SMB_USER${NC}"
    smbpasswd -a "$SMB_USER"

    mkdir -p "/srv/samba/secure_$SMB_USER"
    chown "$SMB_USER:$SMB_USER" "/srv/samba/secure_$SMB_USER"
    chmod 700 "/srv/samba/secure_$SMB_USER"

    cat >> "$SAMBA_CONF" << EOF

[secure_$SMB_USER]
   path = /srv/samba/secure_$SMB_USER
   valid users = $SMB_USER
   browsable = yes
   writable = yes
   guest ok = no
   read only = no
   create mask = 0600
   directory mask = 0700
EOF

    echo -e "${GREEN}‚úÖ –ó–∞—â–∏—â—ë–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è $SMB_USER –¥–æ–±–∞–≤–ª–µ–Ω–∞.${NC}"
fi

# --- ufw ---
if command -v ufw &> /dev/null && ufw status | grep -q "active"; then
    ufw allow 9090    # cockpit
    ufw allow samba   # 139,445
    echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã: 9090 (Cockpit), 139/445 (Samba)${NC}"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Samba
systemctl restart smbd nmbd
systemctl enable smbd nmbd >/dev/null 2>&1

# --- –§–∏–Ω–∞–ª ---
IP=$(hostname -I | awk '{print $1}')
echo
echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo
echo -e "${BLUE}üìå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:${NC}"
echo "–ì–æ—Å—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø: smb://$IP/public"
echo "–î–∏—Å–∫–∏: smb://$IP/disk_sda1, smb://$IP/disk_nvme0n1p2 –∏ —Ç.–¥."
if [[ "$ADD_USER" =~ ^[Yy][Ee][Ss]$ ]]; then
    echo "–õ–∏—á–Ω–∞—è –ø–∞–ø–∫–∞: smb://$IP/secure_$SMB_USER"
fi
echo
echo -e "${BLUE}üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://$IP:9090${NC}"
echo "  - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π, –¥–∏—Å–∫–∞–º–∏, Samba (—á–µ—Ä–µ–∑ –ø–ª–∞–≥–∏–Ω)"
echo
echo -e "${YELLOW}üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: SMB3-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ. –ö–ª–∏–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å SMB 3.0+${NC}"
echo -e "${GREEN}‚úÖ –ì–æ—Ç–æ–≤–æ!${NC}"